programming_paradigm
->
	array_paradigm;
	concatenative_paradigm;
	concurrent_paradigm;
	declarative_paradigm;
	esoteric_paradigm;
	function_level_paradigm;
	functional_paradigm;
	generic_paradigm;
	imperative_paradigm;
	logic_paradigm;
	message_passing_paradigm;
	metaprogramming_paradigm;
	non_strict_paradigm;
	object_oriented_paradigm;
	procedural_paradigm;
	prototype_based_paradigm;
	reflective_paradigm;
	scalar_paradigm;
	stack_oriented_paradigm;
	strict_paradigm;
	structured_paradigm;
	value_level_paradigm;
	visual_paradigm;;

pr_typing
->
	pr_safe_typing;
	pr_typeless_typing;
	pr_dynamic_typing;
	pr_weak_typing;
	pr_implicit_typing;
	pr_nominal_typing;
	pr_static_typing;
	pr_strong_typing;
	pr_structural_typing;
	pr_typed_typing;
	pr_explicit_typing;;


programming_language
->
	pr_l_abap
		(*
		<-
			imperative_paradigm;
			object_oriented_paradigm;
			structured_paradigm;;
		<-
			pr_safe_typing;
			pr_nominal_typing;
			pr_static_typing;
			pr_strong_typing;;
		*);
	pr_l_ada
		(*
		<-
			imperative_paradigm;
			value_level_paradigm;
			object_oriented_paradigm;
			generic_paradigm;
			procedural_paradigm;
			scalar_paradigm;
			strict_paradigm;
			structured_paradigm;;
		<-
			pr_safe_typing;
			pr_typed_typing;
			pr_static_typing;
			pr_strong_typing;;
		*);
	pr_l_algol
		(*
		<-
			imperative_paradigm;;
		<-
			pr_static_typing;;
		*);
	pr_l_assembler;
	pr_l_basic
		(*
		<-
			imperative_paradigm;
			value_level_paradigm;
			scalar_paradigm;;
		<-
			pr_typeless_typing;;
		*);
	pr_l_brainfuck
		(*
		<-
			imperative_paradigm;
			esoteric_paradigm;
			value_level_paradigm;;
		<-
			pr_typeless_typing;;
		*);
	pr_l_c
		(*
		<-
			imperative_paradigm;
			value_level_paradigm;
			scalar_paradigm;
			procedural_paradigm;
			structured_paradigm;;
		<-
			pr_weak_typing;
			pr_nominal_typing;
			pr_typed_typing;
			pr_explicit_typing;
			pr_static_typing;;
		*);
	pr_l_csharp
		(*
		<-
			imperative_paradigm;
			generic_paradigm;
			object_oriented_paradigm;
			scalar_paradigm;
			strict_paradigm;
			structured_paradigm;;
		<-
			pr_typeless_typing;
			pr_nominal_typing;
			pr_static_typing;
			pr_strong_typing;
			pr_typed_typing;;
		*);
	pr_l_cpp
		(*
		<-
			imperative_paradigm;
			value_level_paradigm;
			generic_paradigm;
			procedural_paradigm;
			object_oriented_paradigm;;
		<-
			pr_nominal_typing;
			pr_typed_typing;
			pr_explicit_typing;
			pr_static_typing;
			pr_strong_typing;;
		*);
	pr_l_cobol
		(*
		<-
			imperative_paradigm;
			value_level_paradigm;
			object_oriented_paradigm;
			procedural_paradigm;
			scalar_paradigm;
			strict_paradigm;;
		<-
			pr_typed_typing;
			pr_static_typing;
			pr_strong_typing;;
		*);
	pr_l_dart
		(*
		<-
			imperative_paradigm;
			value_level_paradigm;
			object_oriented_paradigm;
			structured_paradigm;
			scalar_paradigm;;
		<-
			pr_typed_typing;
			pr_static_typing;;
		*);
	pr_l_erlang
		(*
		<-	
			concurrent_paradigm;
			strict_paradigm;
			functional_paradigm;;
		<-
			
			pr_dynamic_typing;
			pr_strong_typing;
			pr_typed_typing;;
		*);
	pr_l_falcon
		(*
		<-
			functional_paradigm;
			message_passing_paradigm;
			object_oriented_paradigm;
			procedural_paradigm;
			prototype_based_paradigm;;
		<-
			pr_dynamic_typing;
			pr_implicit_typing;
			pr_typed_typing;;
		*);
	pr_l_fortran
		(*
		<-
			imperative_paradigm;
			object_oriented_paradigm;
			procedural_paradigm;
			structured_paradigm;;
		<-
			pr_static_typing;
			pr_strong_typing;
			pr_typed_typing;;
		*);
	pr_l_go
		(*
		<-
			imperative_paradigm;
			procedural_paradigm;
			scalar_paradigm;
			structured_paradigm;
			value_level_paradigm;;
		<-
			pr_safe_typing;
			pr_static_typing;
			pr_strong_typing;
			pr_typed_typing;;
		*);
	pr_l_haskell
		(*
		<-
			functional_paradigm;
			non_strict_paradigm;;
		<-
			pr_static_typing;
			pr_strong_typing;;
		*);
	pr_l_java
		(*
		<-
			imperative_paradigm;
			object_oriented_paradigm;
			procedural_paradigm;
			scalar_paradigm;
			value_level_paradigm;;
		<-
			pr_static_typing;
			pr_strong_typing;
			pr_typed_typing;
			pr_explicit_typing;;
		*);
	pr_l_k
		(*
		<-
			array_paradigm;
			functional_paradigm;;
		<-
			pr_dynamic_typing;
			pr_typed_typing;;
		*);
	pr_l_j
		(*
		<-
			array_paradigm;
			function_level_paradigm;
			functional_paradigm;;
		<-
			pr_dynamic_typing;
			pr_strong_typing;
			pr_typed_typing;;
		*);
	pr_l_lisp
		(*
		<-
			functional_paradigm;
			metaprogramming_paradigm;
			procedural_paradigm;
			reflective_paradigm;;
		<-
			pr_safe_typing;
			pr_dynamic_typing;
			pr_implicit_typing;
			pr_structural_typing;
			pr_typed_typing;;
		*);
	pr_l_lua
		(*
		<-
			functional_paradigm;
			imperative_paradigm;
			procedural_paradigm;
			prototype_based_paradigm;
			reflective_paradigm;
			scalar_paradigm;
			strict_paradigm;
			value_level_paradigm;;
		<-
			pr_safe_typing;
			pr_dynamic_typing;
			pr_weak_typing;
			pr_implicit_typing;
			pr_typed_typing;;
		*);
	pr_l_miranda
		(*
		<-
			functional_paradigm;
			non_strict_paradigm;;
		<-
			pr_static_typing;
			pr_strong_typing;;
		*);
	pr_l_objective_c
		(*
		<-
			imperative_paradigm;
			object_oriented_paradigm;
			reflective_paradigm;
			scalar_paradigm;
			strict_paradigm;
			value_level_paradigm;;
		<-
			pr_dynamic_typing;
			pr_nominal_typing;
			pr_static_typing;
			pr_strong_typing;
			pr_typed_typing;
			pr_explicit_typing;;
		*);
	pr_l_pascal
		(*
		<-
			imperative_paradigm;
			procedural_paradigm;
			scalar_paradigm;
			structured_paradigm;
			value_level_paradigm;;
		<-
			pr_safe_typing;
			pr_static_typing;
			pr_strong_typing;
			pr_typed_typing;
			pr_explicit_typing;;
		*);
	pr_l_perl
		(*
		<-
			functional_paradigm;
			imperative_paradigm;
			metaprogramming_paradigm;
			object_oriented_paradigm;
			procedural_paradigm;
			reflective_paradigm;
			value_level_paradigm;;
		<-
			pr_dynamic_typing;;
		*);
	pr_l_php
		(*
		<-
			functional_paradigm;
			imperative_paradigm;
			object_oriented_paradigm;;
		<-
			pr_dynamic_typing;;
		*);
	pr_l_prolog
		(*
		<-
			declarative_paradigm;
			logic_paradigm;
			reflective_paradigm;;
		<-
			pr_dynamic_typing;
			pr_implicit_typing;
			pr_strong_typing;;
		*);
	pr_l_python
		(*
		<-
			pr_dynamic_typing;
			pr_strong_typing;;
		*);
	pr_l_ruby
		(*
		<-
			object_oriented_paradigm;;
		<-
			pr_dynamic_typing;
			pr_strong_typing;;
		*);
	pr_l_rust
		(*
		<-
			concurrent_paradigm;
			functional_paradigm;
			generic_paradigm;
			imperative_paradigm;
			metaprogramming_paradigm;
			structured_paradigm;;
		<-
			pr_static_typing;
			pr_structural_typing;
			pr_typed_typing;;
		*);
	pr_l_scala
		(*
		<-
			functional_paradigm;
			imperative_paradigm;
			object_oriented_paradigm;
			scalar_paradigm;
			value_level_paradigm;;
		<-
			pr_implicit_typing;
			pr_static_typing;
			pr_strong_typing;
			pr_structural_typing;
			pr_typed_typing;;
		*);
	pr_l_smalltalk
		(*
		<-
			imperative_paradigm;
			object_oriented_paradigm;
			scalar_paradigm;
			value_level_paradigm;;
		<-
			pr_dynamic_typing;
			pr_implicit_typing;
			pr_typed_typing;;
		*);
	pr_l_sql
		(*
		<-
			declarative_paradigm;
			strict_paradigm;;
		<-
			pr_safe_typing;
			pr_nominal_typing;
			pr_static_typing;
			pr_strong_typing;
			pr_typed_typing;
			pr_explicit_typing;;
		*);
	pr_l_tex
		(*
		<-
			imperative_paradigm;;
		<-
			pr_typed_typing;;
		*);;